{
    "openapi": "3.1.0",
    "info": {
      "title": "ShapeShift",
      "description": "OpenAPI Schema for ShapeShift",
      "version": "0.0.1"
    },
    "paths": {
      "/": {
        "get": {
          "tags": ["ping"],
          "summary": "Ping",
          "operationId": "ping__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          }
        }
      },
      "/api/v1/user/create": {
        "post": {
          "tags": ["users"],
          "summary": "Create a new user",
          "operationId": "createUser",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuth"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - User with this email or username already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error - An unexpected error occurred",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/user/me": {
        "get": {
          "tags": ["users"],
          "summary": "Get current user",
          "operationId": "getCurrentUser",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/user/update": {
        "put": {
          "tags": ["users"],
          "summary": "Update current user",
          "operationId": "updateCurrentUser",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/user/delete": {
        "delete": {
          "tags": ["users"],
          "summary": "Delete current user",
          "operationId": "deleteCurrentUser",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/auth/login": {
        "post": {
          "tags": ["auth"],
          "summary": "Create access and refresh tokens for user",
          "operationId": "login",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Body_login"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenSchema"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/test-token": {
        "post": {
          "tags": ["auth"],
          "summary": "Test if the access token is valid",
          "operationId": "testToken",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/auth/refresh": {
        "post": {
          "tags": ["auth"],
          "summary": "Refresh token",
          "operationId": "refreshToken",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Refresh Token"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenSchema"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/workout/": {
        "get": {
          "tags": ["workouts"],
          "summary": "Get all workouts",
          "operationId": "getWorkouts",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/WorkoutOut"
                    },
                    "type": "array",
                    "title": "Response Getworkouts"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        },
        "post": {
          "tags": ["workouts"],
          "summary": "Create a workout",
          "operationId": "createWorkout",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Workout"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/workout/{workout_id}": {
        "get": {
          "tags": ["workouts"],
          "summary": "Get a single workout",
          "operationId": "getWorkout",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkoutOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["workouts"],
          "summary": "Update a workout",
          "operationId": "updateWorkout",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkoutOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["workouts"],
          "summary": "Delete a workout",
          "operationId": "deleteWorkout",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/goal/": {
        "get": {
          "tags": ["goals"],
          "summary": "Get all goals",
          "operationId": "getGoals",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/GoalOut"
                    },
                    "type": "array",
                    "title": "Response Getgoals"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        },
        "post": {
          "tags": ["goals"],
          "summary": "Create a goal",
          "operationId": "createGoal",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Goal"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/goal/{goal_id}": {
        "get": {
          "tags": ["goals"],
          "summary": "Get a single goal",
          "operationId": "getGoal",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "goal_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Goal Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GoalOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["goals"],
          "summary": "Update a goal",
          "operationId": "updateGoals",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "goal_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Goal Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GoalOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["goals"],
          "summary": "Delete a goal",
          "operationId": "deleteGoal",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "goal_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Goal Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise/": {
        "get": {
          "tags": ["exercises"],
          "summary": "Get all exercises",
          "operationId": "getAllExercises",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/ExerciseOut"
                    },
                    "type": "array",
                    "title": "Response Getallexercises"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/exercise/exercises/{workout_id}": {
        "get": {
          "tags": ["exercises"],
          "summary": "Get all exercises",
          "operationId": "getExercises",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExerciseOut"
                    },
                    "title": "Response Getexercises"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise/{workout_id}": {
        "post": {
          "tags": ["exercises"],
          "summary": "Create an exercise",
          "operationId": "createExercise",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Exercise"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise/{exercise_id}": {
        "get": {
          "tags": ["exercises"],
          "summary": "Get a single exercise",
          "operationId": "getExercise",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["exercises"],
          "summary": "Update an exercise",
          "operationId": "updateExercise",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["exercises"],
          "summary": "Delete an exercise",
          "operationId": "deleteExercise",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/session/": {
        "get": {
          "tags": ["sessions"],
          "summary": "Get all sessions",
          "operationId": "getSessions",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/SessionOut"
                    },
                    "type": "array",
                    "title": "Response Getsessions"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/session/{workout_id}": {
        "post": {
          "tags": ["sessions"],
          "summary": "Create an session",
          "operationId": "createSession",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/session/{session_id}": {
        "get": {
          "tags": ["sessions"],
          "summary": "Get a single session",
          "operationId": "getSession",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Session Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["sessions"],
          "summary": "Update an session",
          "operationId": "updateSession",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Session Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["sessions"],
          "summary": "Delete an session",
          "operationId": "deleteSession",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Session Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/session/active/sessions": {
        "get": {
          "tags": ["sessions"],
          "summary": "Get all active sessions",
          "operationId": "getActiveSessions",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/SessionOut"
                    },
                    "type": "array",
                    "title": "Response Getactivesessions"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/v1/session/workout/{workout_id}": {
        "get": {
          "tags": ["sessions"],
          "summary": "Get all sessions for a workout",
          "operationId": "getWorkoutSessions",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "workout_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Workout Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionWorkoutOut"
                    },
                    "title": "Response Getworkoutsessions"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise-instance/exercise-instances/exercise/{exercise_id}": {
        "get": {
          "tags": ["exercise-instances"],
          "summary": "Get all exercise instances by exercise",
          "operationId": "getExerciseInstancesByExercise",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExerciseInstanceOut"
                    },
                    "title": "Response Getexerciseinstancesbyexercise"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise-instance/exercise-instances/{session_id}": {
        "get": {
          "tags": ["exercise-instances"],
          "summary": "Get all exercise instances",
          "operationId": "getExerciseInstances",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Session Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExerciseInstanceOut"
                    },
                    "title": "Response Getexerciseinstances"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise-instance/{session_id}": {
        "post": {
          "tags": ["exercise-instances"],
          "summary": "Create an exercise instance",
          "operationId": "createExerciseInstance",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Session Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseInstanceCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseInstance"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/exercise-instance/{exercise_instance_id}": {
        "get": {
          "tags": ["exercise-instances"],
          "summary": "Get a single exercise instance",
          "operationId": "getExerciseInstance",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_instance_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Instance Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseInstanceOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["exercise-instances"],
          "summary": "Update an exercise instance",
          "operationId": "updateExerciseInstance",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_instance_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Instance Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseInstanceUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseInstanceOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["exercise-instances"],
          "summary": "Delete an exercise instance",
          "operationId": "deleteExerciseInstance",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "exercise_instance_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Exercise Instance Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/generate/": {
        "post": {
          "tags": ["generate"],
          "summary": "Generate a workout plan",
          "operationId": "generateWorkoutPlan",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseGPTData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExerciseGPTOut"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Body_login": {
          "properties": {
            "grant_type": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "password"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Grant Type"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            },
            "scope": {
              "type": "string",
              "title": "Scope",
              "default": ""
            },
            "client_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Id"
            },
            "client_secret": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Secret"
            }
          },
          "type": "object",
          "required": ["username", "password"],
          "title": "Body_login"
        },
        "ErrorResponse": {
          "properties": {
            "detail": {
              "type": "string",
              "title": "Detail"
            }
          },
          "type": "object",
          "required": ["detail"],
          "title": "ErrorResponse"
        },
        "Exercise": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "title": " Id",
              "description": "MongoDB document ObjectID"
            },
            "exercise_id": {
              "type": "string",
              "format": "uuid",
              "title": "Exercise Id",
              "unique": true
            },
            "name": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Name"
            },
            "type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExerciseType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "equipment": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Equipment"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "muscle": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Muscle"
            },
            "track_reps": {
              "type": "boolean",
              "title": "Track Reps",
              "default": false
            },
            "track_weight": {
              "type": "boolean",
              "title": "Track Weight",
              "default": false
            },
            "track_distance": {
              "type": "boolean",
              "title": "Track Distance",
              "default": false
            },
            "track_duration": {
              "type": "boolean",
              "title": "Track Duration",
              "default": false
            },
            "workout": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Workout"
            },
            "owner": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Owner"
            }
          },
          "type": "object",
          "required": ["name", "workout", "owner"],
          "title": "Exercise"
        },
        "ExerciseCreate": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/ExerciseType"
            },
            "muscle": {
              "type": "string",
              "title": "Muscle"
            },
            "equipment": {
              "type": "string",
              "title": "Equipment"
            },
            "description": {
              "type": "string",
              "title": "Description"
            }
          },
          "type": "object",
          "required": ["name", "type", "muscle", "equipment", "description"],
          "title": "ExerciseCreate"
        },
        "ExerciseGPTData": {
          "properties": {
            "workout_name": {
              "type": "string",
              "title": "Workout Name"
            },
            "age": {
              "type": "integer",
              "title": "Age"
            },
            "gender": {
              "$ref": "#/components/schemas/Gender"
            },
            "weight": {
              "type": "integer",
              "title": "Weight"
            },
            "height": {
              "type": "integer",
              "title": "Height"
            },
            "goal": {
              "type": "string",
              "title": "Goal"
            },
            "experience": {
              "type": "string",
              "title": "Experience"
            },
            "time": {
              "type": "string",
              "title": "Time"
            },
            "target_muscle": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Target Muscle"
            },
            "equipment": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Equipment"
            },
            "exercise_type": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Exercise Type"
            }
          },
          "type": "object",
          "required": [
            "workout_name",
            "age",
            "gender",
            "weight",
            "height",
            "goal",
            "experience",
            "time",
            "target_muscle",
            "equipment",
            "exercise_type"
          ],
          "title": "ExerciseGPTData"
        },
        "ExerciseGPTOut": {
          "properties": {
            "workout_name": {
              "type": "string",
              "title": "Workout Name"
            },
            "notes": {
              "type": "string",
              "title": "Notes"
            },
            "exercises": {
              "items": {
                "$ref": "#/components/schemas/ExerciseCreate"
              },
              "type": "array",
              "title": "Exercises"
            }
          },
          "type": "object",
          "required": ["workout_name", "notes", "exercises"],
          "title": "ExerciseGPTOut"
        },
        "ExerciseInstance": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "title": " Id",
              "description": "MongoDB document ObjectID"
            },
            "exercise_instance_id": {
              "type": "string",
              "format": "uuid",
              "title": "Exercise Instance Id",
              "unique": true
            },
            "sets": {
              "type": "integer",
              "title": "Sets",
              "default": 1
            },
            "reps": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Reps",
              "default": []
            },
            "weight": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Weight",
              "default": []
            },
            "distance": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Distance",
              "default": []
            },
            "duration": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Duration",
              "default": []
            },
            "exercise": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Exercise"
            },
            "session": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Session"
            },
            "owner": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Owner"
            }
          },
          "type": "object",
          "required": ["exercise", "session", "owner"],
          "title": "ExerciseInstance"
        },
        "ExerciseInstanceCreate": {
          "properties": {
            "exercise_id": {
              "type": "string",
              "format": "uuid",
              "title": "Exercise Id"
            }
          },
          "type": "object",
          "required": ["exercise_id"],
          "title": "ExerciseInstanceCreate"
        },
        "ExerciseInstanceOut": {
          "properties": {
            "exercise_instance_id": {
              "type": "string",
              "format": "uuid",
              "title": "Exercise Instance Id"
            },
            "sets": {
              "type": "integer",
              "title": "Sets"
            },
            "reps": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Reps"
            },
            "weight": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Weight"
            },
            "distance": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Distance"
            },
            "duration": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Duration"
            },
            "exercise": {
              "$ref": "#/components/schemas/Exercise"
            },
            "session": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "type": "object",
          "required": [
            "exercise_instance_id",
            "sets",
            "reps",
            "weight",
            "distance",
            "duration",
            "exercise",
            "session"
          ],
          "title": "ExerciseInstanceOut"
        },
        "ExerciseInstanceUpdate": {
          "properties": {
            "sets": {
              "type": "integer",
              "title": "Sets"
            },
            "reps": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Reps"
            },
            "weight": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Weight"
            },
            "distance": {
              "items": {
                "type": "number"
              },
              "type": "array",
              "title": "Distance"
            },
            "duration": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Duration"
            }
          },
          "type": "object",
          "required": ["sets", "reps", "weight", "distance", "duration"],
          "title": "ExerciseInstanceUpdate"
        },
        "ExerciseOut": {
          "properties": {
            "exercise_id": {
              "type": "string",
              "format": "uuid",
              "title": "Exercise Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExerciseType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "muscle": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Muscle"
            },
            "equipment": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Equipment"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "track_reps": {
              "type": "boolean",
              "title": "Track Reps"
            },
            "track_weight": {
              "type": "boolean",
              "title": "Track Weight"
            },
            "track_distance": {
              "type": "boolean",
              "title": "Track Distance"
            },
            "track_duration": {
              "type": "boolean",
              "title": "Track Duration"
            }
          },
          "type": "object",
          "required": [
            "exercise_id",
            "name",
            "type",
            "muscle",
            "equipment",
            "description",
            "track_reps",
            "track_weight",
            "track_distance",
            "track_duration"
          ],
          "title": "ExerciseOut"
        },
        "ExerciseType": {
          "type": "string",
          "enum": [
            "cardio",
            "strength",
            "olympic_weightlifting",
            "plyometrics",
            "powerlifting",
            "stretching",
            "strongman"
          ],
          "title": "ExerciseType"
        },
        "ExerciseUpdate": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExerciseType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "muscle": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Muscle"
            },
            "equipment": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Equipment"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "track_reps": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Track Reps"
            },
            "track_weight": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Track Weight"
            },
            "track_distance": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Track Distance"
            },
            "track_duration": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Track Duration"
            }
          },
          "type": "object",
          "required": [
            "name",
            "type",
            "muscle",
            "equipment",
            "description",
            "track_reps",
            "track_weight",
            "track_distance",
            "track_duration"
          ],
          "title": "ExerciseUpdate"
        },
        "Gender": {
          "type": "string",
          "enum": ["male", "female", "other"],
          "title": "Gender"
        },
        "Goal": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "title": " Id",
              "description": "MongoDB document ObjectID"
            },
            "goal_id": {
              "type": "string",
              "format": "uuid",
              "title": "Goal Id",
              "unique": true
            },
            "category": {
              "$ref": "#/components/schemas/GoalType"
            },
            "goal": {
              "type": "integer",
              "title": "Goal"
            },
            "exercise": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exercise"
            },
            "owner": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Owner"
            }
          },
          "type": "object",
          "required": ["category", "goal", "owner"],
          "title": "Goal"
        },
        "GoalCreate": {
          "properties": {
            "category": {
              "$ref": "#/components/schemas/GoalType"
            },
            "goal": {
              "type": "integer",
              "title": "Goal"
            },
            "exercise": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exercise"
            }
          },
          "type": "object",
          "required": ["category", "goal", "exercise"],
          "title": "GoalCreate"
        },
        "GoalOut": {
          "properties": {
            "goal_id": {
              "type": "string",
              "format": "uuid",
              "title": "Goal Id"
            },
            "category": {
              "$ref": "#/components/schemas/GoalType"
            },
            "goal": {
              "type": "integer",
              "title": "Goal"
            },
            "exercise": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exercise"
            },
            "owner": {
              "$ref": "#/components/schemas/UserOut"
            }
          },
          "type": "object",
          "required": ["goal_id", "category", "goal", "exercise", "owner"],
          "title": "GoalOut"
        },
        "GoalType": {
          "type": "string",
          "enum": ["weight", "pr", "completed"],
          "title": "GoalType"
        },
        "GoalUpdate": {
          "properties": {
            "category": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/GoalType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "goal": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Goal"
            },
            "exercise": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Exercise"
            }
          },
          "type": "object",
          "required": ["category", "goal", "exercise"],
          "title": "GoalUpdate"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "Session": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "title": " Id",
              "description": "MongoDB document ObjectID"
            },
            "session_id": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id",
              "unique": true
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "title": "Date"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "active": {
              "type": "boolean",
              "title": "Active",
              "default": false
            },
            "workout": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Workout"
            },
            "owner": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Owner"
            }
          },
          "type": "object",
          "required": ["workout", "owner"],
          "title": "Session"
        },
        "SessionCreate": {
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "title": "Date"
            },
            "active": {
              "type": "boolean",
              "title": "Active"
            }
          },
          "type": "object",
          "required": ["date", "active"],
          "title": "SessionCreate"
        },
        "SessionOut": {
          "properties": {
            "session_id": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "title": "Date"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "active": {
              "type": "boolean",
              "title": "Active"
            },
            "workout": {
              "$ref": "#/components/schemas/Workout"
            }
          },
          "type": "object",
          "required": [
            "session_id",
            "date",
            "duration_mins",
            "active",
            "workout"
          ],
          "title": "SessionOut"
        },
        "SessionUpdate": {
          "properties": {
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "active": {
              "type": "boolean",
              "title": "Active"
            }
          },
          "type": "object",
          "required": ["duration_mins", "active"],
          "title": "SessionUpdate"
        },
        "SessionWorkoutOut": {
          "properties": {
            "session_id": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "title": "Date"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "active": {
              "type": "boolean",
              "title": "Active"
            }
          },
          "type": "object",
          "required": ["session_id", "date", "duration_mins", "active"],
          "title": "SessionWorkoutOut"
        },
        "TokenSchema": {
          "properties": {
            "access_token": {
              "type": "string",
              "title": "Access Token"
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token"
            }
          },
          "type": "object",
          "required": ["access_token", "refresh_token"],
          "title": "TokenSchema"
        },
        "UserAuth": {
          "properties": {
            "email": {
              "type": "string",
              "title": "Email",
              "description": "user email"
            },
            "username": {
              "type": "string",
              "maxLength": 50,
              "minLength": 5,
              "title": "Username",
              "description": "user username"
            },
            "password": {
              "type": "string",
              "maxLength": 50,
              "minLength": 5,
              "title": "Password",
              "description": "user password"
            }
          },
          "type": "object",
          "required": ["email", "username", "password"],
          "title": "UserAuth"
        },
        "UserOut": {
          "properties": {
            "user_id": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "email": {
              "type": "string",
              "title": "Email"
            },
            "first_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "First Name"
            },
            "last_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Name"
            },
            "birth_date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Birth Date"
            },
            "gender": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Gender"
                },
                {
                  "type": "null"
                }
              ]
            },
            "height_in": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Height In"
            },
            "weight": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Weight"
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "username",
            "email",
            "first_name",
            "last_name",
            "birth_date",
            "gender",
            "height_in",
            "weight"
          ],
          "title": "UserOut"
        },
        "UserUpdate": {
          "properties": {
            "email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            },
            "first_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "First Name"
            },
            "last_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Name"
            },
            "birth_date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Birth Date"
            },
            "gender": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Gender"
                },
                {
                  "type": "null"
                }
              ]
            },
            "height_in": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Height In"
            },
            "weight": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Weight"
            }
          },
          "type": "object",
          "required": [
            "email",
            "first_name",
            "last_name",
            "birth_date",
            "gender",
            "height_in",
            "weight"
          ],
          "title": "UserUpdate"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": ["loc", "msg", "type"],
          "title": "ValidationError"
        },
        "Workout": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "title": " Id",
              "description": "MongoDB document ObjectID"
            },
            "workout_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workout Id",
              "unique": true
            },
            "title": {
              "type": "string",
              "title": "Title"
            },
            "created_date": {
              "type": "string",
              "format": "date-time",
              "title": "Created Date"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "day_of_week": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Day Of Week",
              "default": []
            },
            "owner": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "collection": {
                  "type": "string",
                  "title": "Collection"
                }
              },
              "type": "object",
              "required": ["id", "collection"],
              "title": "Owner"
            }
          },
          "type": "object",
          "required": ["title", "owner"],
          "title": "Workout"
        },
        "WorkoutCreate": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Title"
            },
            "day_of_week": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Day Of Week",
              "default": []
            }
          },
          "type": "object",
          "required": ["title"],
          "title": "WorkoutCreate"
        },
        "WorkoutOut": {
          "properties": {
            "workout_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workout Id"
            },
            "title": {
              "type": "string",
              "title": "Title"
            },
            "created_date": {
              "type": "string",
              "format": "date-time",
              "title": "Created Date"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "day_of_week": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Day Of Week",
              "default": []
            }
          },
          "type": "object",
          "required": ["workout_id", "title", "created_date", "duration_mins"],
          "title": "WorkoutOut"
        },
        "WorkoutUpdate": {
          "properties": {
            "title": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 50,
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            },
            "duration_mins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration Mins"
            },
            "day_of_week": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Day Of Week",
              "default": []
            }
          },
          "type": "object",
          "required": ["title", "duration_mins"],
          "title": "WorkoutUpdate"
        }
      },
      "securitySchemes": {
        "JWT": {
          "type": "oauth2",
          "flows": {
            "password": {
              "scopes": {},
              "tokenUrl": "/api/v1/auth/login"
            }
          }
        }
      }
    },
    "servers": [
      {
        "url": "https://shapeshift-backend.onrender.com"
      }
    ]
  }